// Copyright (c) [2017] Dell Inc. or its subsidiaries. All Rights Reserved.
package crb_web

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"../../work/nazgul/copyrepo/copyrepo-web-api/src/main/resources/models"
)

// GetRepositoryStatsOKCode is the HTTP code returned for type GetRepositoryStatsOK
const GetRepositoryStatsOKCode int = 200

/*GetRepositoryStatsOK Successful operation

swagger:response getRepositoryStatsOK
*/
type GetRepositoryStatsOK struct {

	/*
	  In: Body
	*/
	Payload *models.RepositoryStats `json:"body,omitempty"`
}

// NewGetRepositoryStatsOK creates GetRepositoryStatsOK with default headers values
func NewGetRepositoryStatsOK() *GetRepositoryStatsOK {
	return &GetRepositoryStatsOK{}
}

// WithPayload adds the payload to the get repository stats o k response
func (o *GetRepositoryStatsOK) WithPayload(payload *models.RepositoryStats) *GetRepositoryStatsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get repository stats o k response
func (o *GetRepositoryStatsOK) SetPayload(payload *models.RepositoryStats) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRepositoryStatsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRepositoryStatsNoContentCode is the HTTP code returned for type GetRepositoryStatsNoContent
const GetRepositoryStatsNoContentCode int = 204

/*GetRepositoryStatsNoContent No repoId in Metadata-DB

swagger:response getRepositoryStatsNoContent
*/
type GetRepositoryStatsNoContent struct {
}

// NewGetRepositoryStatsNoContent creates GetRepositoryStatsNoContent with default headers values
func NewGetRepositoryStatsNoContent() *GetRepositoryStatsNoContent {
	return &GetRepositoryStatsNoContent{}
}

// WriteResponse to the client
func (o *GetRepositoryStatsNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

// GetRepositoryStatsInternalServerErrorCode is the HTTP code returned for type GetRepositoryStatsInternalServerError
const GetRepositoryStatsInternalServerErrorCode int = 500

/*GetRepositoryStatsInternalServerError Internal error -- most likely Metadata-DB not accessible

swagger:response getRepositoryStatsInternalServerError
*/
type GetRepositoryStatsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRepositoryStatsInternalServerError creates GetRepositoryStatsInternalServerError with default headers values
func NewGetRepositoryStatsInternalServerError() *GetRepositoryStatsInternalServerError {
	return &GetRepositoryStatsInternalServerError{}
}

// WithPayload adds the payload to the get repository stats internal server error response
func (o *GetRepositoryStatsInternalServerError) WithPayload(payload *models.Error) *GetRepositoryStatsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get repository stats internal server error response
func (o *GetRepositoryStatsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRepositoryStatsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetRepositoryStatsDefault Unexpected error

swagger:response getRepositoryStatsDefault
*/
type GetRepositoryStatsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRepositoryStatsDefault creates GetRepositoryStatsDefault with default headers values
func NewGetRepositoryStatsDefault(code int) *GetRepositoryStatsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRepositoryStatsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get repository stats default response
func (o *GetRepositoryStatsDefault) WithStatusCode(code int) *GetRepositoryStatsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get repository stats default response
func (o *GetRepositoryStatsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get repository stats default response
func (o *GetRepositoryStatsDefault) WithPayload(payload *models.Error) *GetRepositoryStatsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get repository stats default response
func (o *GetRepositoryStatsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRepositoryStatsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
