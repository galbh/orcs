// Copyright (c) [2017] Dell Inc. or its subsidiaries. All Rights Reserved.
package crb_web

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListRepositoryInstancesHandlerFunc turns a function with the right signature into a list repository instances handler
type ListRepositoryInstancesHandlerFunc func(ListRepositoryInstancesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListRepositoryInstancesHandlerFunc) Handle(params ListRepositoryInstancesParams) middleware.Responder {
	return fn(params)
}

// ListRepositoryInstancesHandler interface for that can handle valid list repository instances params
type ListRepositoryInstancesHandler interface {
	Handle(ListRepositoryInstancesParams) middleware.Responder
}

// NewListRepositoryInstances creates a new http.Handler for the list repository instances operation
func NewListRepositoryInstances(ctx *middleware.Context, handler ListRepositoryInstancesHandler) *ListRepositoryInstances {
	return &ListRepositoryInstances{Context: ctx, Handler: handler}
}

/*ListRepositoryInstances swagger:route GET /repositories crb-web listRepositoryInstances

Get a list of configured repositories managed by this CRB

Return a list of provisioned repositories

*/
type ListRepositoryInstances struct {
	Context *middleware.Context
	Handler ListRepositoryInstancesHandler
}

func (o *ListRepositoryInstances) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewListRepositoryInstancesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
